[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/PD.js",
    "content": "import Config from './modules/Config.js'\nimport { PowerDom, select, selectAll } from './modules/PowerDom.js'\nimport Request from './modules/Request.js'\nimport Importer from './modules/Importer.js'\nimport { Notification, Loading, Modal } from './modules/UIHelpers.js'\nimport Template from './modules/Template.js'\nimport Pages from './modules/Pages.js'\nimport {State, CountDown} from './modules/State.js'\n\n\n/**\n * An Object that contains all the modules from the framework,\n * check the docs for better understanding\n */\nconst PD = {\n    $: PowerDom.getInstance,\n    select,\n    selectAll,\n    Request,\n    Importer,\n    Notification,\n    Loading,\n    Modal,\n    Template,\n    Pages,\n    Config,\n    State,\n    CountDown\n}\nwindow.PD = PD",
    "static": true,
    "longname": "/Users/jose/NetBeansProjects/powerdom/src/PD.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "PD",
    "memberof": "src/PD.js",
    "static": true,
    "longname": "src/PD.js~PD",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/PD.js",
    "importStyle": null,
    "description": "An Object that contains all the modules from the framework,\ncheck the docs for better understanding",
    "lineNumber": 15,
    "type": {
      "types": [
        "{\"$\": *, \"select\": *, \"selectAll\": *, \"Request\": *, \"Importer\": *, \"Notification\": *, \"Loading\": *, \"Modal\": *, \"Template\": *, \"Pages\": *, \"Config\": *, \"State\": *, \"CountDown\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/modules/Config.js",
    "content": "const config = {\n    \"title\": \"Page Title\",\n    \"apiUrl\": \"http://localhost:8080/\",\n    \"mainElementSelector\": \".page-content\",\n    \"layout\": \"/templates/layout.html\",\n    \"pages\": {\n        \"default\": {\n            \"template\": \"templates/pages/default.html\",\n            \"title\": \"Default\",\n            \"navigation\": false,\n            \"auth\": false\n        }\n    }\n}\n\n/**\n * It holds the site configuration\n * {\n *    \"title\": \"Page Title\",\n *    \"apiUrl\": \"http://localhost:8080/\",\n *    \"mainElementSelector\": \".page-content\",\n *    \"layout\": \"/templates/layout.html\",\n *    \"pages\": {\n *        \"default\": {\n *            \"template\": \"templates/pages/default.html\",\n *            \"title\": \"Default\",\n *            \"navigation\": false,\n *            \"auth\": false\n *         }\n *     }\n * }\n */\nclass Config {\n\n    /**\n     * It will update the config with the allowed members\n     * of the passed object\n     * @param {Object} newConfig \n     */\n    static set(newConfig) {\n        for(let [key, value] of Object.entries(newConfig)){\n            if(config.hasOwnProperty(key)){\n                config[key] = value\n            }\n        }\n    }\n\n    /**\n     * It will get a copy of the current config\n     * @returns {Object}\n     */\n    static get() {\n        return Object.assign({}, config)\n    }\n}\n\nexport default Config",
    "static": true,
    "longname": "/Users/jose/NetBeansProjects/powerdom/src/modules/Config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "config",
    "memberof": "src/modules/Config.js",
    "static": true,
    "longname": "src/modules/Config.js~config",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/Config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"title\": string, \"apiUrl\": string, \"mainElementSelector\": string, \"layout\": string, \"pages\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "class",
    "name": "Config",
    "memberof": "src/modules/Config.js",
    "static": true,
    "longname": "src/modules/Config.js~Config",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/Config.js",
    "importStyle": "Config",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "set",
    "memberof": "src/modules/Config.js~Config",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Config.js~Config.set",
    "access": "public",
    "description": "It will update the config with the allowed members\nof the passed object",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newConfig",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "get",
    "memberof": "src/modules/Config.js~Config",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Config.js~Config.get",
    "access": "public",
    "description": "It will get a copy of the current config",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "src/modules/Importer.js",
    "content": "import {PowerDom} from './PowerDom.js'\nimport Request from './Request.js'\n\nconst $ = PowerDom.getInstance\n\nconst helper = {\n    templates: new Map(),\n    modules: new Map(),\n    getTargetElement: function (targetElementSelector) {\n        const selectorType = typeof targetElementSelector\n        let targetElement = null\n\n        if (selectorType == 'undefined') {\n            targetElement = $(document.body)\n        } else if (selectorType == 'string') {\n            targetElement = $(targetElementSelector)\n        } else if (selectorType == 'object') {\n            if (targetElementSelector instanceof PowerDom)\n                targetElement = targetElementSelector\n            else if (targetElementSelector instanceof Node)\n                targetElement = $(targetElementSelector)\n        } else {\n            throw 'Invalid selector'\n        }\n\n        return targetElement\n    },\n    appendJsToHead: function (url, code) {\n        const temp = url.split('/')\n\n        return `${code} //# sourceURL=${temp.pop()}`\n    },\n    getCode: async function (url) {\n        const removeComments = /\\/\\*[\\s\\S]*?\\*\\/|([^:]|^)\\/\\/.*$/gm\n        const exportDefault = /export\\s+default\\s+(\\w*)/\n        const multiExport = /export\\s*\\{(.+)\\}/\n        const splitMultiExport = /\\w+/g\n        let lineToReplace = '', replacingLine = '', code = ''\n\n        code = await Request.getRemoteText(url)\n        code = code.replace(removeComments, '')\n\n        if (exportDefault.test(code)) {\n            const matches = code.match(exportDefault)\n            lineToReplace = matches[0]\n            replacingLine = `modules.set('${url}', ${matches[1]})\\n`\n\n        } else if (multiExport.test(code)) {\n            const matches = code.match(multiExport)\n\n            lineToReplace = matches[0]\n            replacingLine = 'const m = {}\\n'\n\n            matches[1].match(splitMultiExport).forEach(exported => {\n                replacingLine += `m.${exported} = ${exported}\\n`\n            })\n\n            replacingLine += `modules.set('${url}', m)\\n`\n        } else {\n            throw `Not a valid url: ${url}`\n        }\n\n        code = code.replace(lineToReplace, replacingLine)\n\n        return helper.appendJsToHead(url, code)\n    }\n}\n\nwindow.modules = helper.modules\n\n/**\n * Provides methods to imports the templates, modules and JSON\n */\nclass Importer {\n\n    /**\n     * Reads asynchronously the html file and converts it to nodes\n     * @param {string} url to the file\n     * @param {string, Node, PowerDom} [targetElementSelector] if not selector provided, it will use body\n     * @param {boolean} [replaceTargetElement] in case you want to remove the wrapper element\n     */\n    static async importTemplate(url, targetElementSelector, replaceTargetElement) {\n        const templates = helper.templates\n        const template = document.createElement('template')\n        let targetElement = helper.getTargetElement(targetElementSelector)\n        let html = ''\n\n        if (templates.has(url)) {\n            html = templates.get(url)\n        } else {\n            html = await Request.getRemoteText(url)\n            templates.set(url, html)\n        }\n\n        template.insertAdjacentHTML('beforeend', html)\n\n        if (typeof replaceTargetElement == 'undefined' || !replaceTargetElement)\n            targetElement.setContent(template.childNodes)\n        else\n            targetElement.replace(template.childNodes)\n\n        template.remove()\n    }\n\n    /**\n     * Imports the module dinamacally because normal imports can not be used\n     * @param {string} url\n     * @returns {Object}\n     */\n    static async importModule(url) {\n        const modules = helper.modules\n\n        if (!modules.has(url)) {\n            window.eval(await helper.getCode(url))\n        }\n\n        return modules.get(url)\n    }\n\n    /**\n     * Reads a json and return the object that represents it\n     * @param {string} url \n     * @returns {Object}\n     */\n    static async loadJSON(url) {\n        return JSON.parse(await Request.getRemoteText(url))\n    }\n}\n\nexport default Importer",
    "static": true,
    "longname": "/Users/jose/NetBeansProjects/powerdom/src/modules/Importer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "$",
    "memberof": "src/modules/Importer.js",
    "static": true,
    "longname": "src/modules/Importer.js~$",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/Importer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "helper",
    "memberof": "src/modules/Importer.js",
    "static": true,
    "longname": "src/modules/Importer.js~helper",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/Importer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "{\"templates\": *, \"modules\": *, \"getTargetElement\": *, \"appendJsToHead\": *, \"getCode\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "class",
    "name": "Importer",
    "memberof": "src/modules/Importer.js",
    "static": true,
    "longname": "src/modules/Importer.js~Importer",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/Importer.js",
    "importStyle": "Importer",
    "description": "Provides methods to imports the templates, modules and JSON",
    "lineNumber": 74,
    "interface": false
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "importTemplate",
    "memberof": "src/modules/Importer.js~Importer",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/modules/Importer.js~Importer.importTemplate",
    "access": "public",
    "description": "Reads asynchronously the html file and converts it to nodes",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "to the file"
      },
      {
        "nullable": null,
        "types": [
          "string, Node, PowerDom"
        ],
        "spread": false,
        "optional": true,
        "name": "targetElementSelector",
        "description": "if not selector provided, it will use body"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "replaceTargetElement",
        "description": "in case you want to remove the wrapper element"
      }
    ],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "importModule",
    "memberof": "src/modules/Importer.js~Importer",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/modules/Importer.js~Importer.importModule",
    "access": "public",
    "description": "Imports the module dinamacally because normal imports can not be used",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "loadJSON",
    "memberof": "src/modules/Importer.js~Importer",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/modules/Importer.js~Importer.loadJSON",
    "access": "public",
    "description": "Reads a json and return the object that represents it",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/modules/Pages.js",
    "content": "import Config from './Config.js'\nimport Importer from './Importer.js'\nimport Template from './Template.js'\nimport {\n    PowerDom,\n    select\n} from './PowerDom.js'\nimport {\n    Loading,\n    UIHelpers\n} from './UIHelpers.js'\nimport {State} from './State.js'\n\nconst $ = PowerDom.getInstance\nconst config = Config.get()\n\n/**\n * It is used to control the navigation between pages\n */\nclass Pages {\n\n    /**\n     * Required after imported, but you will never have to\n     */\n    static init() {\n        Pages.prototype.$title = $('title', document.head).setContent(config.title)\n\n        Importer.importTemplate(config.layout, document.body).then(() => {\n            Pages.prototype.mainElement = select(config.mainElementSelector)\n\n            UIHelpers.init()\n\n            Pages.go('default')\n        })\n    }\n\n    /**\n     * Get the object that describes the page\n     * @param {string} index \n     * @returns {Object}\n     */\n    static getPage(index) {\n        const pages = config.pages\n        let page = null\n\n        if (index in pages)\n            page = pages[index]\n\n        return page\n    }\n\n    /**\n     * Standard way of knowing the page is 100% loaded\n     */\n    static firePageReady() {\n        State.fire(Pages.prototype.currenPage.title)\n    }\n\n    /**\n     * Triigers the mechanism to change the current page using an Object\n     * @param {Object} page \n     */\n    static navigate(page) {\n        Loading.show()\n\n        Pages.prototype.currenPage = page\n\n        State.listen(page.title, () => {\n            Pages.prototype.$title.setContent(page.title)\n            Loading.close()\n        })\n\n        Importer.importTemplate(page.template, Pages.prototype.mainElement)\n            .then(() => Template.parse(Pages.prototype.mainElement, Pages.firePageReady))\n    }\n    \n    /**\n     * Triigers the mechanism to change the current page using an string\n     * @param {string} index \n     */\n    static go(index) {\n        const page = Pages.getPage(index)\n\n        if (!page)\n            throw `Invalid page index: ${index}`\n\n        Pages.navigate(page)\n    }\n}\n\nexport default Pages",
    "static": true,
    "longname": "/Users/jose/NetBeansProjects/powerdom/src/modules/Pages.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "$",
    "memberof": "src/modules/Pages.js",
    "static": true,
    "longname": "src/modules/Pages.js~$",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/Pages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "config",
    "memberof": "src/modules/Pages.js",
    "static": true,
    "longname": "src/modules/Pages.js~config",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/Pages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "class",
    "name": "Pages",
    "memberof": "src/modules/Pages.js",
    "static": true,
    "longname": "src/modules/Pages.js~Pages",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/Pages.js",
    "importStyle": "Pages",
    "description": "It is used to control the navigation between pages",
    "lineNumber": 20,
    "interface": false
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "init",
    "memberof": "src/modules/Pages.js~Pages",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Pages.js~Pages.init",
    "access": "public",
    "description": "Required after imported, but you will never have to",
    "lineNumber": 25,
    "params": [],
    "return": null
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "getPage",
    "memberof": "src/modules/Pages.js~Pages",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Pages.js~Pages.getPage",
    "access": "public",
    "description": "Get the object that describes the page",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "firePageReady",
    "memberof": "src/modules/Pages.js~Pages",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Pages.js~Pages.firePageReady",
    "access": "public",
    "description": "Standard way of knowing the page is 100% loaded",
    "lineNumber": 55,
    "params": [],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "navigate",
    "memberof": "src/modules/Pages.js~Pages",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Pages.js~Pages.navigate",
    "access": "public",
    "description": "Triigers the mechanism to change the current page using an Object",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "page",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "go",
    "memberof": "src/modules/Pages.js~Pages",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Pages.js~Pages.go",
    "access": "public",
    "description": "Triigers the mechanism to change the current page using an string",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/modules/PowerDom.js",
    "content": "const ELEMENT_NODE = Node.ELEMENT_NODE\r\n\r\nconst helper = {\r\n    POSITION_BEFORE_BEGIN: 'beforebegin',\r\n    POSITION_AFTER_BEGIN: 'afterbegin',\r\n    POSITION_BEFORE_END: 'beforeend',\r\n    POSITION_AFTER_END: 'afterend',\r\n    insertAdjacent: function(element, position, html) {\r\n        if (typeof html == 'string') {\r\n            element.insertAdjacentHTML(position, html)\r\n        } else if (html instanceof NodeList) {\r\n            html.forEach(n => {\r\n                if (n.nodeType == ELEMENT_NODE)\r\n                    element.insertAdjacentElement(position, n)\r\n            })\r\n        } else {\r\n            element.insertAdjacentElement(position, html)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass PowerDom {\r\n\r\n    /**\r\n     * A shortcut to instanciate \r\n     * @param {DOMString|Document|DocumentFragment|Element} selector\r\n     * @param {Document|DocumentFragment|Element} [element]\r\n     * @returns {PowerDom}\r\n     */\r\n    static getInstance(selector, element) {\r\n        return (typeof selector == 'string') ?\r\n            PowerDom.getInstanceBySelector(selector, element) :\r\n            PowerDom.getInstanceByElement(selector)\r\n    }\r\n\r\n    /**\r\n     * @param {DOMString} selector one or more comma separated\r\n     * @param {Document|DocumentFragment|Element} [element]\r\n     * @returns {PowerDom}\r\n     */\r\n    static getInstanceBySelector(selector, element) {\r\n        let elements = null\r\n\r\n        if (typeof element == 'undefined')\r\n            element = document\r\n\r\n        elements = element.querySelectorAll(selector)\r\n\r\n        if (!elements)\r\n            throw 'No elements selected'\r\n\r\n        return new PowerDom(elements)\r\n    }\r\n\r\n    /**\r\n     * @param {Document|DocumentFragment|Element} [element]\r\n     * @returns {PowerDom}\r\n     */\r\n    static getInstanceByElement(element) {\r\n        return new PowerDom([element])\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Element[]|NodeList} elements \r\n     */\r\n    constructor(elements) {\r\n        this.elements = elements\r\n    }\r\n\r\n    /**\r\n     * @param {string|Document|DocumentFragment|Element} html \r\n     * @returns {PowerDom} this\r\n     */\r\n    setContent(html) {\r\n        this.elements.forEach(element => {\r\n\r\n            while (element.hasChildNodes())\r\n                element.removeChild(element.lastChild)\r\n\r\n            helper.insertAdjacent(element, helper.POSITION_BEFORE_END, html)\r\n        })\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Return a string or strings with the contents \r\n     * @returns {string|string[]}\r\n     */\r\n    getContent() {\r\n        const content = []\r\n\r\n        this.elements.forEach(element => content.push(element.innerHTML))\r\n\r\n        return (content.length == 1) ? content[0] : content\r\n    }\r\n\r\n    /**\r\n     * Set the property value\r\n     * @param {string|number} value \r\n     * @returns {PowerDom} this\r\n     */\r\n    setValue(value) {\r\n        this.elements.forEach(element => element.value = value)\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Get the value or values\r\n     * @returns {string|number|{string|number}[]}\r\n     */\r\n    getValue() {\r\n        const values = []\r\n\r\n        this.elements.forEach(element => values.push(element.value))\r\n\r\n        return (values.length == 1) ? values[0] : values\r\n    }\r\n\r\n    /**\r\n     * Replace element(s) with a html string\r\n     * @param {string|Document|DocumentFragment|Element} html \r\n     */\r\n    replace(html) {\r\n        this.elements.forEach(element => {\r\n            helper.insertAdjacent(element, helper.POSITION_BEFORE_BEGIN, html)\r\n\r\n            element.parentElement.removeChild(element)\r\n        })\r\n\r\n        delete this\r\n    }\r\n\r\n    /**\r\n     * Inserts the resulting nodes into the DOM tree inside the element, before its first child.\r\n     * @param {string|Document|DocumentFragment|Element} html \r\n     * @returns {PowerDom} this\r\n     */\r\n    prepend(html) {\r\n        this.elements.forEach(element => {\r\n            helper.insertAdjacent(element, helper.POSITION_AFTER_BEGIN, html)\r\n        })\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Inserts the resulting nodes into the DOM tree inside the element, after its last child.\r\n     * @param {string|Document|DocumentFragment|Element} html \r\n     * @returns {PowerDom} this\r\n     */\r\n    append(html) {\r\n        this.elements.forEach(element => {\r\n            helper.insertAdjacent(element, helper.POSITION_BEFORE_END, html)\r\n        })\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Inserts the resulting nodes into the DOM tree before the element itself\r\n     * @param {string|Document|DocumentFragment|Element} html \r\n     * @returns {PowerDom} this\r\n     */\r\n    insertBefore(html) {\r\n        this.elements.forEach(element => {\r\n            helper.insertAdjacent(element, helper.POSITION_BEFORE_BEGIN, html)\r\n        })\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Inserts the resulting nodes into the DOM tree after the element itself\r\n     * @param {string|Document|DocumentFragment|Element} html \r\n     * @returns {PowerDom} this\r\n     */\r\n    insertAfter(html) {\r\n        this.elements.forEach(element => {\r\n            helper.insertAdjacent(element, helper.POSITION_AFTER_END, html)\r\n        })\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Returns an string or string[] with the copies  \r\n     * @returns {string|string[]}\r\n     */\r\n    getHtml() {\r\n        const clones = []\r\n\r\n        this.elements.forEach(element => clones.push(element.outerHTML))\r\n\r\n        return (clones.length == 1) ? clones[0] : clones\r\n    }\r\n\r\n    /**\r\n     * Clean the inside of the element(s)\r\n     */\r\n    empty() {\r\n        this.elements.forEach(element => {\r\n            while (element.hasChildNodes())\r\n                element.removeChild(element.lastChild)\r\n\r\n            element.remove()\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Removes all the elements\r\n     */\r\n    remove() {\r\n        this.elements.forEach(element => {\r\n            while (element.hasChildNodes())\r\n                element.removeChild(element.lastChild)\r\n\r\n            if(element.parentElement)\r\n                element.parentElement.removeChild(element)\r\n        })\r\n\r\n        delete this\r\n    }\r\n\r\n    /**\r\n     * Sets up a function that will be called whenever the specified event is delivered to the target\r\n     * @param {string} event\r\n     * @param {EventListener} callback\r\n     * @returns {PowerDom} this\r\n     */\r\n    listen(event, callback) {\r\n        this.elements.forEach(element => element.addEventListener(event, callback))\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Invokes the function previous set for this event\r\n     * @param {string} event \r\n     */\r\n    fire(event) {\r\n        this.elements.forEach(element => element.dispatchEvent(new CustomEvent(event)))\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Removes the event listener previously registered\r\n     * @param {string} event\r\n     * @param {EventListener} callback\r\n     * @returns {PowerDom} this\r\n     */\r\n    mute(event, callback) {\r\n        this.elements.forEach(element => element.removeEventListener(event, callback))\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Add specified class values. If these classes already exist in attribute of the element,\r\n     * then they are ignored.\r\n     * @param {string} cssClass \r\n     */\r\n    addClass(cssClass) {\r\n        this.elements.forEach(element => element.classList.add(cssClass))\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Remove specified class values. Removing a class that does not exist does NOT throw an error.\r\n     * @param {string} cssClass \r\n     */\r\n    removeClass(cssClass) {\r\n        this.elements.forEach(element => element.classList.remove(cssClass))\r\n\r\n        return this\r\n    }\r\n\r\n    removeAllClasses() {\r\n        this.elements.forEach(element => {\r\n            const list = element.classList\r\n            list.forEach(css => list.remove(css))\r\n        })\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * If the class is present will be removed and viceversa\r\n     * @param {string} cssClass \r\n     */\r\n    toggleClass(cssClass) {\r\n        this.elements.forEach(element => element.classList.toggle(cssClass))\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Sets a property with its value\r\n     * @param {string} index \r\n     * @param {string} value \r\n     * @returns {PowerDom} this\r\n     */\r\n    setAttribute(index, value) {\r\n        this.elements.forEach(element => element.setAttribute(index, value))\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Sets a property with its value\r\n     * @param {string} index \r\n     * @returns {PowerDom} this\r\n     */\r\n    removeAttribute(index) {\r\n        this.elements.forEach(element => element.removeAttribute(index))\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Gets the value or values of the property\r\n     * @param {string} index\r\n     * @returns {string|string[]}\r\n     */\r\n    getProperty(index) {\r\n        const values = []\r\n\r\n        this.elements.forEach(element => values.push(element[index]))\r\n\r\n        return (values.length == 1) ? values[0] : values\r\n    }\r\n\r\n    /**\r\n     * Removes a property in case you need it\r\n     * @param {string} index\r\n     * @returns {PowerDom} this\r\n     */\r\n    removeProperty(index) {\r\n        this.elements.forEach(element => delete element[index])\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Sets a new member on the elements dataset\r\n     * @param {string} index \r\n     * @param {string} value \r\n     * @returns {PowerDom} this\r\n     */\r\n    setData(index, value) {\r\n        this.elements.forEach(element => element.dataset[index] = value)\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Get the value or values\r\n     * @param {string} index \r\n     * @returns {string|string[]}\r\n     */\r\n    getData(index) {\r\n        const data = []\r\n\r\n        this.elements.forEach(element => data.push(element.dataset[index]))\r\n\r\n        return (data.length == 1) ? data[0] : data\r\n    }\r\n\r\n    /**\r\n     * Get the reference or references to the contained nodes\r\n     */\r\n    getElements() {\r\n        const elements = this.elements\r\n\r\n        return (elements.length == 1) ? elements[0] : elements\r\n    }\r\n\r\n    select(selector) {\r\n        const data = []\r\n\r\n        this.elements(element => data.push(select(selector, element)))\r\n\r\n        return (data.length == 1) ? data[0] : data\r\n    }\r\n    \r\n    selectAll(selector) {\r\n        let data = []\r\n\r\n        this.elements.forEach(element => {\r\n            const nodeList = selectAll(selector, element)\r\n            data = data.concat(nodeList)\r\n        })\r\n\r\n        return (data.length == 1) ? data[0] : data\r\n    }\r\n}\r\n\r\n/**\r\n * Returns the first Element within the document that matches the specified selector,\r\n * or group of selectors. If no matches are found, null is returned.\r\n * @param {DOMString} selector one or more comma separated\r\n * @param {Document|DocumentFragment|Element} [element]\r\n * @returns {Element|Node}\r\n */\r\nfunction select(selector, element) {\r\n    element = (typeof element == 'undefined') ? document : element\r\n    return element.querySelector(selector)\r\n}\r\n\r\n/**\r\n * Returns a static (not live) NodeList representing a list of the document's element\r\n *  that match the specified group of selectors.\r\n * @param {DOMString} selector one or more comma separated\r\n * @param {Document|DocumentFragment|Element} [element]\r\n * @returns {Element[]|NodeList}\r\n */\r\nfunction selectAll(selector, element) {\r\n    element = (typeof element == 'undefined') ? document : element\r\n    return element.querySelectorAll(selector)\r\n}\r\n\r\nexport { PowerDom, select, selectAll }\r\n/**\r\n * @callback errorCallback\r\n * @param {object} error\r\n *\r\n * @callback EventListener\r\n * @param {object} event\r\n */",
    "static": true,
    "longname": "/Users/jose/NetBeansProjects/powerdom/src/modules/PowerDom.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "ELEMENT_NODE",
    "memberof": "src/modules/PowerDom.js",
    "static": true,
    "longname": "src/modules/PowerDom.js~ELEMENT_NODE",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/PowerDom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "helper",
    "memberof": "src/modules/PowerDom.js",
    "static": true,
    "longname": "src/modules/PowerDom.js~helper",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/PowerDom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"POSITION_BEFORE_BEGIN\": string, \"POSITION_AFTER_BEGIN\": string, \"POSITION_BEFORE_END\": string, \"POSITION_AFTER_END\": string, \"insertAdjacent\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "class",
    "name": "PowerDom",
    "memberof": "src/modules/PowerDom.js",
    "static": true,
    "longname": "src/modules/PowerDom.js~PowerDom",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/PowerDom.js",
    "importStyle": "{PowerDom}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "getInstance",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/PowerDom.js~PowerDom.getInstance",
    "access": "public",
    "description": "A shortcut to instanciate ",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DOMString",
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "element",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "getInstanceBySelector",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/PowerDom.js~PowerDom.getInstanceBySelector",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DOMString"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "one or more comma separated"
      },
      {
        "nullable": null,
        "types": [
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "element",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "getInstanceByElement",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/PowerDom.js~PowerDom.getInstanceByElement",
    "access": "public",
    "description": "",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "element",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 78,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element[]",
          "NodeList"
        ],
        "spread": false,
        "optional": false,
        "name": "elements",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "elements",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#elements",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "setContent",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#setContent",
    "access": "public",
    "description": "",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom} this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "html",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "getContent",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#getContent",
    "access": "public",
    "description": "Return a string or strings with the contents ",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|string[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "string[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "setValue",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#setValue",
    "access": "public",
    "description": "Set the property value",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom} this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "getValue",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#getValue",
    "access": "public",
    "description": "Get the value or values",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|number|{string|number}[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "number",
        "{string",
        "number}[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "replace",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#replace",
    "access": "public",
    "description": "Replace element(s) with a html string",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "html",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "prepend",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#prepend",
    "access": "public",
    "description": "Inserts the resulting nodes into the DOM tree inside the element, before its first child.",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom} this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "html",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "append",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#append",
    "access": "public",
    "description": "Inserts the resulting nodes into the DOM tree inside the element, after its last child.",
    "lineNumber": 155,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom} this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "html",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "insertBefore",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#insertBefore",
    "access": "public",
    "description": "Inserts the resulting nodes into the DOM tree before the element itself",
    "lineNumber": 167,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom} this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "html",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "insertAfter",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#insertAfter",
    "access": "public",
    "description": "Inserts the resulting nodes into the DOM tree after the element itself",
    "lineNumber": 180,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom} this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "html",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "getHtml",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#getHtml",
    "access": "public",
    "description": "Returns an string or string[] with the copies  ",
    "lineNumber": 192,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|string[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "string[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "empty",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#empty",
    "access": "public",
    "description": "Clean the inside of the element(s)",
    "lineNumber": 203,
    "params": [],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "remove",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#remove",
    "access": "public",
    "description": "Removes all the elements",
    "lineNumber": 215,
    "params": [],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "listen",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#listen",
    "access": "public",
    "description": "Sets up a function that will be called whenever the specified event is delivered to the target",
    "lineNumber": 233,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom} this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EventListener"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "fire",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#fire",
    "access": "public",
    "description": "Invokes the function previous set for this event",
    "lineNumber": 243,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "mute",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#mute",
    "access": "public",
    "description": "Removes the event listener previously registered",
    "lineNumber": 255,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom} this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EventListener"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "addClass",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#addClass",
    "access": "public",
    "description": "Add specified class values. If these classes already exist in attribute of the element,\nthen they are ignored.",
    "lineNumber": 266,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cssClass",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "removeClass",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#removeClass",
    "access": "public",
    "description": "Remove specified class values. Removing a class that does not exist does NOT throw an error.",
    "lineNumber": 276,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cssClass",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "removeAllClasses",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#removeAllClasses",
    "access": "public",
    "description": null,
    "lineNumber": 282,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "toggleClass",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#toggleClass",
    "access": "public",
    "description": "If the class is present will be removed and viceversa",
    "lineNumber": 295,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cssClass",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "setAttribute",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#setAttribute",
    "access": "public",
    "description": "Sets a property with its value",
    "lineNumber": 307,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom} this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "removeAttribute",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#removeAttribute",
    "access": "public",
    "description": "Sets a property with its value",
    "lineNumber": 318,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom} this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "getProperty",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#getProperty",
    "access": "public",
    "description": "Gets the value or values of the property",
    "lineNumber": 329,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|string[]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "string[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "removeProperty",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#removeProperty",
    "access": "public",
    "description": "Removes a property in case you need it",
    "lineNumber": 342,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom} this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "setData",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#setData",
    "access": "public",
    "description": "Sets a new member on the elements dataset",
    "lineNumber": 354,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PowerDom} this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PowerDom"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "getData",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#getData",
    "access": "public",
    "description": "Get the value or values",
    "lineNumber": 365,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|string[]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "string[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "getElements",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#getElements",
    "access": "public",
    "description": "Get the reference or references to the contained nodes",
    "lineNumber": 376,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "select",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#select",
    "access": "public",
    "description": null,
    "lineNumber": 382,
    "undocument": true,
    "params": [
      {
        "name": "selector",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "selectAll",
    "memberof": "src/modules/PowerDom.js~PowerDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/PowerDom.js~PowerDom#selectAll",
    "access": "public",
    "description": null,
    "lineNumber": 390,
    "undocument": true,
    "params": [
      {
        "name": "selector",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "select",
    "memberof": "src/modules/PowerDom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/PowerDom.js~select",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/PowerDom.js",
    "importStyle": "{select}",
    "description": "Returns the first Element within the document that matches the specified selector,\nor group of selectors. If no matches are found, null is returned.",
    "lineNumber": 409,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element|Node}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DOMString"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "one or more comma separated"
      },
      {
        "nullable": null,
        "types": [
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "element",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element",
        "Node"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "selectAll",
    "memberof": "src/modules/PowerDom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/PowerDom.js~selectAll",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/PowerDom.js",
    "importStyle": "{selectAll}",
    "description": "Returns a static (not live) NodeList representing a list of the document's element\n that match the specified group of selectors.",
    "lineNumber": 421,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element[]|NodeList}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DOMString"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "one or more comma separated"
      },
      {
        "nullable": null,
        "types": [
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "element",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element[]",
        "NodeList"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "src/modules/Request.js",
    "content": "import Config from './Config.js'\n\nconst config = Config.get()\nconst workers = new Map()\n\n/**\n * The simplified way of getting data and files from the server\n */\nclass Request {\n\n    /**\n     * Sends and receive JSON data to the server, typically use on api rest calls\n     * @param {string} path \n     * @param {Object} data \n     * @param {function} errorCb \n     * @param {Object} headers \n     */\n    static async json(path, data, errorCb, headers) {\n        if(typeof headers == 'undefined')\n            headers = {}\n\n        headers['Content-Type'] = 'application/json'\n\n        return fetch(config.apiUrl + path, {\n            method: 'post',\n            body: data ? JSON.stringify(data) : null,\n            mode: 'cors',\n            headers: new Headers(headers)\n        })\n            .then(response => response.json())\n            .catch(errorCb)\n    }\n\n    /**\n     * Gets a worker to be used in Request.worker\n     * @param {string} workerUrl \n     * @param {function} callback \n     * @param {function} errorCb \n     */\n    static getWorkerForRquest(workerUrl, callback, errorCb) {\n        let worker = null\n\n        if (!workers.has(workerUrl)) {\n            worker = new Worker(workerUrl)\n\n            worker.addEventListener('message', callback, false)\n            worker.addEventListener('error', errorCb, false)\n\n            workers.set(workerUrl, worker)\n        } else {\n            worker = workers.get(workerUrl)\n        }\n\n        return worker\n    }\n\n    /**\n     * Its process the result data of the call on a background worker\n     * @param {string} path \n     * @param {Object} data \n     * @param {Worker} worker \n     */\n    static worker(path, data, worker) {\n        fetch(config.apiUrl + path, {\n            method: 'post',\n            body: data ? JSON.stringify(data) : null,\n            mode: 'cors',\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n            .then(response => response.json())\n            .then(data => worker.postMessage(data))\n            .catch(errorCb)\n    }\n\n    /**\n     * It gets whatever as plain text\n     * @param {string} url \n     */\n    static async getRemoteText(url) {\n        let text = ''\n        try {\n            const response = await fetch(url)\n            text = await response.text()\n        }\n        catch (err) {\n            console.log('fetch failed', err)\n        }\n\n        return text\n    }\n\n    /**\n     * An universal api rest error handler\n     * @param {string|Object} error \n     */\n    static handleError(error) {\n        let message = ''\n\n        if (typeof error == \"string\")\n            message = error\n        else if (error.hasOwnProperty('message'))\n            message = error.message\n        else if (error.hasOwnProperty('error'))\n            message = error.error\n\n        Notification.show(message)\n\n        console.error(error)\n    }\n}\nexport default Request",
    "static": true,
    "longname": "/Users/jose/NetBeansProjects/powerdom/src/modules/Request.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "config",
    "memberof": "src/modules/Request.js",
    "static": true,
    "longname": "src/modules/Request.js~config",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/Request.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "name": "workers",
    "memberof": "src/modules/Request.js",
    "static": true,
    "longname": "src/modules/Request.js~workers",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/Request.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 113,
    "kind": "class",
    "name": "Request",
    "memberof": "src/modules/Request.js",
    "static": true,
    "longname": "src/modules/Request.js~Request",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/Request.js",
    "importStyle": "Request",
    "description": "The simplified way of getting data and files from the server",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "json",
    "memberof": "src/modules/Request.js~Request",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/modules/Request.js~Request.json",
    "access": "public",
    "description": "Sends and receive JSON data to the server, typically use on api rest calls",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "errorCb",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "headers",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "getWorkerForRquest",
    "memberof": "src/modules/Request.js~Request",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Request.js~Request.getWorkerForRquest",
    "access": "public",
    "description": "Gets a worker to be used in Request.worker",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "workerUrl",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "errorCb",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "worker",
    "memberof": "src/modules/Request.js~Request",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Request.js~Request.worker",
    "access": "public",
    "description": "Its process the result data of the call on a background worker",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Worker"
        ],
        "spread": false,
        "optional": false,
        "name": "worker",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "getRemoteText",
    "memberof": "src/modules/Request.js~Request",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/modules/Request.js~Request.getRemoteText",
    "access": "public",
    "description": "It gets whatever as plain text",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "handleError",
    "memberof": "src/modules/Request.js~Request",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Request.js~Request.handleError",
    "access": "public",
    "description": "An universal api rest error handler",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 119,
    "kind": "file",
    "name": "src/modules/State.js",
    "content": "function stateMap() {\n    if (!State.prototype.hasOwnProperty('map'))\n        State.prototype.map = new Map()\n\n    return State.prototype.map\n}\n\n/**\n * A Class to hold states and its callbacks\n */\nclass State {\n    /**\n     * set the listener\n     * @param {string} state \n     * @param {function} callback \n     */\n    static listen(state, callback) {\n        const map = stateMap()\n\n        if (map.has(state)) {\n            const callbacks = map.get(state)\n\n            callbacks.push(callback)\n        } else {\n            map.set(state, [callback])\n        }\n    }\n\n    /**\n     * Triggers the listener\n     * @param {string} state \n     */\n    static fire(state) {\n        const map = stateMap()\n\n        if (!map.has(state))\n            return\n\n        map.get(state).forEach(callback => callback())\n        map.delete(state)\n    }\n}\n\nfunction cdMap() {\n    if (!CountDown.prototype.hasOwnProperty('map'))\n        CountDown.prototype.map = new Map()\n\n    return CountDown.prototype.map\n}\n\n/**\n * It is used to trigger a callback after a numer of times is called\n */\nclass CountDown {\n\n    /**\n     * Set the countdown\n     * @param {string} key \n     * @param {int} length \n     * @param {function} callback \n     */\n    static set(key, length, callback) {\n        const map = cdMap()\n\n        if (map.has(key))\n            return\n\n        map.set(key, {l: length, cb: callback})\n    }\n\n    /**\n     * Reduce the number of times to be called in one\n     * @param {string} key \n     */\n    static decrease(key) {\n        const map = cdMap()\n\n        if (!map.has(key))\n            return\n\n        const state = map.get(key)\n\n        if(state.l > 0){\n            --state.l\n            map.set(key, state)\n\n            if(state.l == 0)\n                state.cb()\n        }\n    }\n}\n\nexport {\n    State,\n    CountDown\n}",
    "static": true,
    "longname": "/Users/jose/NetBeansProjects/powerdom/src/modules/State.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "stateMap",
    "memberof": "src/modules/State.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/State.js~stateMap",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/State.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "cdMap",
    "memberof": "src/modules/State.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/State.js~cdMap",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/State.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 122,
    "kind": "class",
    "name": "State",
    "memberof": "src/modules/State.js",
    "static": true,
    "longname": "src/modules/State.js~State",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/State.js",
    "importStyle": "{State}",
    "description": "A Class to hold states and its callbacks",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "listen",
    "memberof": "src/modules/State.js~State",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/State.js~State.listen",
    "access": "public",
    "description": "set the listener",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "fire",
    "memberof": "src/modules/State.js~State",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/State.js~State.fire",
    "access": "public",
    "description": "Triggers the listener",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "class",
    "name": "CountDown",
    "memberof": "src/modules/State.js",
    "static": true,
    "longname": "src/modules/State.js~CountDown",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/State.js",
    "importStyle": "{CountDown}",
    "description": "It is used to trigger a callback after a numer of times is called",
    "lineNumber": 54,
    "interface": false
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "set",
    "memberof": "src/modules/State.js~CountDown",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/State.js~CountDown.set",
    "access": "public",
    "description": "Set the countdown",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "decrease",
    "memberof": "src/modules/State.js~CountDown",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/State.js~CountDown.decrease",
    "access": "public",
    "description": "Reduce the number of times to be called in one",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "src/modules/Template.js",
    "content": "import {\n    selectAll\n} from './PowerDom.js'\nimport Importer from './Importer.js'\n\nimport {CountDown} from './State'\n\nfunction createUUID(){\n    let dt = new Date().getTime();\n    let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        let r = (dt + Math.random()*16)%16 | 0;\n        dt = Math.floor(dt/16);\n        return (c=='x' ? r :(r&0x3|0x8)).toString(16);\n    });\n    return uuid;\n}\n\nfunction _listenHelper(strListener, el, instance){\n    const [event, callback] = strListener.split(':')\n\n    PD.$(el).listen(event, instance[callback].bind(instance))\n}\n\n/**\n * It handles the template manipulation\n */\nclass Template {\n\n    /**\n     * Serach for template elements defined in the element, replace them with the right html\n     * and invokes the callback when all is ready\n     * @param {Document|DocumentFragment|Element} element \n     * @param {function} callback \n     */\n    static parse(element, callback) {\n        const tpls = selectAll('tpl', element);\n        const uiid = createUUID()\n\n        CountDown.set(uiid, tpls.length, callback)\n\n        tpls.forEach(tpl => {\n            const url = tpl.getAttribute('src')\n            const module = tpl.getAttribute('module')\n            const fire =  tpl.getAttribute('fire')\n            const ready = () => {\n                if(fire) fire()\n                CountDown.decrease(uiid)\n            }\n\n            Importer.importTemplate(url, tpl).then(() => {\n                if(module)\n                    Importer.importModule(module).then((className) => new className(tpl, ready))\n                else\n                    ready()\n            })\n        })\n    }\n\n    /**\n     * When the parsed template element have a module attribute, it uses as\n     * url of a module to import. This module shoud extend from Templat.\n     * Check the Demo folder for a better understanding with examples\n     * @param {Document|DocumentFragment|Element} element tpl node that is going to be processed\n     * @param {function} ready callback that will be invoke once all is ready\n     */\n    constructor(element, ready){\n        this.el = element\n        this.ready = ready\n\n        this._elements()\n        \n        this._listen()\n\n        this.process().then(() => this.removeWrapper())\n    }\n\n    /**\n     * Finds all the elements with _ as attribute and attach them to the current\n     * instance\n     */\n    _elements() {\n        this._ = {}\n\n        PD.selectAll('[_]', this.el).forEach(el => this._[el.getAttribute('_')] = el)\n    }\n\n    /**\n     * Finds all the elements with _listen=\"event1:callback1,event2:callback2\" as attribute\n     * and adds listener to those element where the callback is this.callback, this.callback2 ...\n     */\n    _listen() {\n        PD.selectAll('[_listen]', this.el).forEach(el => {\n            const strListeners = el.getAttribute('_listen')\n            strListeners.split(\",\").forEach(strListener => _listenHelper(strListener, el, this))\n        });\n    }\n\n    /**\n     * Asynchronous function ready to be overriden to fit whatever the need in the class\n     */\n    async process(){}\n\n    /**\n     * Removes the template outerHTML and invokes the ready function\n     */\n    removeWrapper(){\n        const el = this.el\n        const parent = el.parentElement\n\n        while (el.hasChildNodes())\n            parent.insertBefore(el.firstChild, el);\n\n        parent.removeChild(el)\n        delete this.el\n\n        this.ready()\n    }\n\n}\n\nexport default Template",
    "static": true,
    "longname": "/Users/jose/NetBeansProjects/powerdom/src/modules/Template.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "createUUID",
    "memberof": "src/modules/Template.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Template.js~createUUID",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/Template.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "_listenHelper",
    "memberof": "src/modules/Template.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Template.js~_listenHelper",
    "access": "private",
    "export": false,
    "importPath": "powerdom/src/modules/Template.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "strListener",
        "types": [
          "*"
        ]
      },
      {
        "name": "el",
        "types": [
          "*"
        ]
      },
      {
        "name": "instance",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 131,
    "kind": "class",
    "name": "Template",
    "memberof": "src/modules/Template.js",
    "static": true,
    "longname": "src/modules/Template.js~Template",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/Template.js",
    "importStyle": "Template",
    "description": "It handles the template manipulation",
    "lineNumber": 27,
    "interface": false
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "parse",
    "memberof": "src/modules/Template.js~Template",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Template.js~Template.parse",
    "access": "public",
    "description": "Serach for template elements defined in the element, replace them with the right html\nand invokes the callback when all is ready",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 133,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/modules/Template.js~Template",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Template.js~Template#constructor",
    "access": "public",
    "description": "When the parsed template element have a module attribute, it uses as\nurl of a module to import. This module shoud extend from Templat.\nCheck the Demo folder for a better understanding with examples",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "tpl node that is going to be processed"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "ready",
        "description": "callback that will be invoke once all is ready"
      }
    ]
  },
  {
    "__docId__": 134,
    "kind": "member",
    "name": "el",
    "memberof": "src/modules/Template.js~Template",
    "static": false,
    "longname": "src/modules/Template.js~Template#el",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "ready",
    "memberof": "src/modules/Template.js~Template",
    "static": false,
    "longname": "src/modules/Template.js~Template#ready",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "_elements",
    "memberof": "src/modules/Template.js~Template",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Template.js~Template#_elements",
    "access": "private",
    "description": "Finds all the elements with _ as attribute and attach them to the current\ninstance",
    "lineNumber": 81,
    "params": [],
    "return": null
  },
  {
    "__docId__": 137,
    "kind": "member",
    "name": "_",
    "memberof": "src/modules/Template.js~Template",
    "static": false,
    "longname": "src/modules/Template.js~Template#_",
    "access": "private",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "_listen",
    "memberof": "src/modules/Template.js~Template",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Template.js~Template#_listen",
    "access": "private",
    "description": "Finds all the elements with _listen=\"event1:callback1,event2:callback2\" as attribute\nand adds listener to those element where the callback is this.callback, this.callback2 ...",
    "lineNumber": 91,
    "params": [],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "process",
    "memberof": "src/modules/Template.js~Template",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/modules/Template.js~Template#process",
    "access": "public",
    "description": "Asynchronous function ready to be overriden to fit whatever the need in the class",
    "lineNumber": 101,
    "params": [],
    "return": null
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "removeWrapper",
    "memberof": "src/modules/Template.js~Template",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Template.js~Template#removeWrapper",
    "access": "public",
    "description": "Removes the template outerHTML and invokes the ready function",
    "lineNumber": 106,
    "params": [],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "src/modules/UIHelpers.js",
    "content": "import dialogPolyfill from 'dialog-polyfill'\nimport {PowerDom, select} from './PowerDom.js'\n\nconst $ = PowerDom.getInstance\nconst closeBtn = `<br><br><button class=\"btn tiny\" onclick=\"PD.Modal.close()\">Close</button>`\nlet $dialog = null\nlet DialogElement = null\n\n/**\n * Displays a text as a notification\n */\nclass Notification {\n\n    /**\n     * Displays the text for a period of time, default 2 seconds\n     * @param {string} message \n     * @param {int} [displayTime] milliseconds\n     */\n    static show(message, displayTime) {\n        if (typeof displayTime == 'undefined')\n            displayTime = 2000\n\n        $dialog.removeAllClasses()\n            .addClass('notification')\n            .setContent(message)\n            .getElements()\n            .show()\n\n        setTimeout(() => {\n            DialogElement.close()\n        }, displayTime)\n    }\n}\n\n/**\n * Displays a spinner\n */\nclass Loading {\n    /**\n     * Displays a spinner for a period of time\n     * @param {int} displayTime milliseconds\n     */\n    static show(displayTime) {\n        $dialog.removeAllClasses()\n            .setContent('<span class=\"load\"></span>')\n            .getElements()\n            .showModal()\n\n        if (typeof displayTime != 'undefined') {\n            setTimeout(() => {\n                DialogElement.close()\n            }, displayTime)\n        }\n    }\n\n    /**\n     * Hides the spinner and the UI is usable again\n     */\n    static close() {\n        DialogElement.close()\n    }\n}\n\n/**\n * Displays an HTML in a pop up blocking the rest of the UI\n */\nclass Modal {\n    /**\n     * Generates the pop up content using an html string\n     * @param {string} content \n     * @param {boolean} addCloseBtn \n     */\n    static setContent(content, addCloseBtn) {\n        if (typeof addCloseBtn != 'undefined' && addCloseBtn)\n            content = content.concat(closeBtn)\n\n        $dialog.removeAllClasses()\n            .setContent(content)\n    }\n\n    /**\n     * Generates the content using objects that implement the node interface\n     * @param {Document|DocumentFragment|Element} content \n     */\n    static setContentElement(content) {\n        $dialog.removeAllClasses()\n            .setContentElement(content)\n    }\n\n    /**\n     * Displays a pop up with previously generated content and makes the user focus on it by\n     * blocking the rest of the UI\n     */\n    static show() {\n        DialogElement.showModal()\n    }\n\n    /**\n     * Hides the pop up\n     */\n    static close() {\n        DialogElement.close()\n    }\n}\n\n/**\n * A helper class in order initiate the others\n */\nclass UIHelpers {\n    static init() {\n        DialogElement = select('dialog')\n\n        $dialog = $(DialogElement)\n        dialogPolyfill.registerDialog(DialogElement)\n    }\n}\n\nexport { Notification, Loading, Modal, UIHelpers }",
    "static": true,
    "longname": "/Users/jose/NetBeansProjects/powerdom/src/modules/UIHelpers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "variable",
    "name": "$",
    "memberof": "src/modules/UIHelpers.js",
    "static": true,
    "longname": "src/modules/UIHelpers.js~$",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/UIHelpers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 143,
    "kind": "variable",
    "name": "closeBtn",
    "memberof": "src/modules/UIHelpers.js",
    "static": true,
    "longname": "src/modules/UIHelpers.js~closeBtn",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/UIHelpers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "$dialog",
    "memberof": "src/modules/UIHelpers.js",
    "static": true,
    "longname": "src/modules/UIHelpers.js~$dialog",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/UIHelpers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "DialogElement",
    "memberof": "src/modules/UIHelpers.js",
    "static": true,
    "longname": "src/modules/UIHelpers.js~DialogElement",
    "access": "public",
    "export": false,
    "importPath": "powerdom/src/modules/UIHelpers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "class",
    "name": "Notification",
    "memberof": "src/modules/UIHelpers.js",
    "static": true,
    "longname": "src/modules/UIHelpers.js~Notification",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/UIHelpers.js",
    "importStyle": "{Notification}",
    "description": "Displays a text as a notification",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "show",
    "memberof": "src/modules/UIHelpers.js~Notification",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/UIHelpers.js~Notification.show",
    "access": "public",
    "description": "Displays the text for a period of time, default 2 seconds",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": true,
        "name": "displayTime",
        "description": "milliseconds"
      }
    ],
    "return": null
  },
  {
    "__docId__": 148,
    "kind": "class",
    "name": "Loading",
    "memberof": "src/modules/UIHelpers.js",
    "static": true,
    "longname": "src/modules/UIHelpers.js~Loading",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/UIHelpers.js",
    "importStyle": "{Loading}",
    "description": "Displays a spinner",
    "lineNumber": 38,
    "interface": false
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "show",
    "memberof": "src/modules/UIHelpers.js~Loading",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/UIHelpers.js~Loading.show",
    "access": "public",
    "description": "Displays a spinner for a period of time",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "displayTime",
        "description": "milliseconds"
      }
    ],
    "return": null
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "close",
    "memberof": "src/modules/UIHelpers.js~Loading",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/UIHelpers.js~Loading.close",
    "access": "public",
    "description": "Hides the spinner and the UI is usable again",
    "lineNumber": 59,
    "params": [],
    "return": null
  },
  {
    "__docId__": 151,
    "kind": "class",
    "name": "Modal",
    "memberof": "src/modules/UIHelpers.js",
    "static": true,
    "longname": "src/modules/UIHelpers.js~Modal",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/UIHelpers.js",
    "importStyle": "{Modal}",
    "description": "Displays an HTML in a pop up blocking the rest of the UI",
    "lineNumber": 67,
    "interface": false
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "setContent",
    "memberof": "src/modules/UIHelpers.js~Modal",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/UIHelpers.js~Modal.setContent",
    "access": "public",
    "description": "Generates the pop up content using an html string",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "addCloseBtn",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "setContentElement",
    "memberof": "src/modules/UIHelpers.js~Modal",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/UIHelpers.js~Modal.setContentElement",
    "access": "public",
    "description": "Generates the content using objects that implement the node interface",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "Document",
          "DocumentFragment",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "show",
    "memberof": "src/modules/UIHelpers.js~Modal",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/UIHelpers.js~Modal.show",
    "access": "public",
    "description": "Displays a pop up with previously generated content and makes the user focus on it by\nblocking the rest of the UI",
    "lineNumber": 94,
    "params": [],
    "return": null
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "close",
    "memberof": "src/modules/UIHelpers.js~Modal",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/UIHelpers.js~Modal.close",
    "access": "public",
    "description": "Hides the pop up",
    "lineNumber": 101,
    "params": [],
    "return": null
  },
  {
    "__docId__": 156,
    "kind": "class",
    "name": "UIHelpers",
    "memberof": "src/modules/UIHelpers.js",
    "static": true,
    "longname": "src/modules/UIHelpers.js~UIHelpers",
    "access": "public",
    "export": true,
    "importPath": "powerdom/src/modules/UIHelpers.js",
    "importStyle": "{UIHelpers}",
    "description": "A helper class in order initiate the others",
    "lineNumber": 109,
    "interface": false
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "init",
    "memberof": "src/modules/UIHelpers.js~UIHelpers",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/UIHelpers.js~UIHelpers.init",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "kind": "index",
    "content": "The low complexity and lightweigth Single Page Application framework that you were needing, with all the fancy stuff that all the popular includes but without the hassle",
    "longname": "/Users/jose/NetBeansProjects/powerdom/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"powerdom\",\n  \"version\": \"1.0.0\",\n  \"description\": \"The low complexity and lightweigth Single Page Application framework that you were needing, with all the fancy stuff that all the popular includes but without the hassle\",\n  \"directories\": {\n    \"doc\": \"docs\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"build\": \"webpack\",\n    \"dev\": \"webpack-dev-server\",\n    \"sass\": \"node-sass --include-path node_modules/vital-css/dist/scss src/scss -o dist/css --output-style compressed\",\n    \"esdoc\": \"./node_modules/.bin/esdoc\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://jarivas@github.com/jarivas/powerdom.git\"\n  },\n  \"keywords\": [\n    \"spa\"\n  ],\n  \"author\": \"jarivas\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/jarivas/powerdom/issues\"\n  },\n  \"homepage\": \"https://github.com/jarivas/powerdom#readme\",\n  \"dependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"dialog-polyfill\": \"^0.5.0\",\n    \"node-sass\": \"^4.11.0\",\n    \"vital-css\": \"^2.2.1\",\n    \"webpack\": \"^4.29.6\",\n    \"webpack-cli\": \"^3.3.0\",\n    \"webpack-dev-server\": \"^3.2.1\"\n  }\n}\n",
    "longname": "/Users/jose/NetBeansProjects/powerdom/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]